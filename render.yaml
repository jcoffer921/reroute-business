services:
  - type: web
    name: reroute-business
    env: python
    plan: starter
    autoDeploy: true

    buildCommand: |
      echo "üîß BUILD START at $(pwd)"
      export PYTHONPATH=/opt/render/project/src
      export DJANGO_SETTINGS_MODULE=reroute_business.reroute.settings
      export DEBUG=False

      pip install --upgrade pip
      pip install -r requirements.txt

      echo "üìÇ Checking for staticfiles directories..."
      python manage.py shell -c "from django.conf import settings; import os; print('BASE_DIR:', settings.BASE_DIR); print('STATIC_ROOT:', settings.STATIC_ROOT); print('STATICFILES_DIRS:', settings.STATICFILES_DIRS); print('STATIC_ROOT exists?', os.path.exists(settings.STATIC_ROOT));"

      echo "üìÅ Creating staticfiles directory manually..."
      # STATIC_ROOT is <repo>/staticfiles per settings; create that exact path
      mkdir -pv staticfiles   # force create the destination

      echo "üé® Running collectstatic (fresh copy)..."
      # Clear the STATIC_ROOT before collecting to avoid stale files
      rm -rf staticfiles && mkdir -pv staticfiles
      python manage.py collectstatic --noinput --verbosity 2

      echo "üîé Verifying collected assets..."
      python manage.py findstatic css/style.css || true
      ls -R staticfiles | sed -n '1,200p'
      echo "‚úÖ BUILD COMPLETE"





    preDeployCommand: |
      export PYTHONPATH=/opt/render/project/src
      export DJANGO_SETTINGS_MODULE=reroute_business.reroute.settings
      python manage.py migrate --noinput

    startCommand: |
      export PYTHONPATH=/opt/render/project/src
      export DJANGO_SETTINGS_MODULE=reroute_business.reroute.settings
      # Run migrations on startup as a safety net (idempotent)
      python manage.py migrate --noinput || true
      exec gunicorn reroute_business.reroute.wsgi:application

    envVars:
      - key: PYTHON_VERSION
        value: 3.12
      - key: DJANGO_SETTINGS_MODULE
        value: reroute_business.reroute.settings
      - key: SECRET_KEY
        generateValue: true
      - key: DEBUG
        value: "False"
      - key: ALLOWED_HOSTS
        value: "reroute-backend.onrender.com,reroute-business.onrender.com,reroutejobs.com,www.reroutejobs.com,localhost,127.0.0.1"
      - key: CSRF_TRUSTED_ORIGINS
        value: "https://reroute-backend.onrender.com,https://reroute-business.onrender.com,https://reroutejobs.com,https://www.reroutejobs.com,http://localhost,http://127.0.0.1"
      - key: DATABASE_URL
        fromDatabase:
          name: reroute-postgres
          property: connectionString
      - key: RENDER
        value: "true"

databases:
  - name: reroute-postgres
    plan: starter
